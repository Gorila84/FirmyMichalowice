{"version":3,"file":"tooltip.directive.d.ts","sources":["tooltip.directive.d.ts"],"names":[],"mappingssourcesContent":["import { ElementRef, EventEmitter, OnDestroy, OnInit, Renderer2, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { TooltipConfig } from './tooltip.config';\r\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\r\nimport { PositioningService } from 'ngx-bootstrap/positioning';\r\nexport declare class TooltipDirective implements OnInit, OnDestroy {\r\n    private _elementRef;\r\n    private _renderer;\r\n    private _positionService;\r\n    tooltipId: number;\r\n    /** sets disable adaptive position */\r\n    adaptivePosition: boolean;\r\n    /**\r\n     * Content to be displayed as tooltip.\r\n     */\r\n    tooltip: string | TemplateRef<any>;\r\n    /** Fired when tooltip content changes */\r\n    tooltipChange: EventEmitter<string | TemplateRef<any>>;\r\n    /**\r\n     * Placement of a tooltip. Accepts: \"top\", \"bottom\", \"left\", \"right\"\r\n     */\r\n    placement: string;\r\n    /**\r\n     * Specifies events that should trigger. Supports a space separated list of\r\n     * event names.\r\n     */\r\n    triggers: string;\r\n    /**\r\n     * A selector specifying the element the tooltip should be appended to.\r\n     */\r\n    container: string;\r\n    /**\r\n     * Css class for tooltip container\r\n     */\r\n    containerClass: string;\r\n    /**\r\n     * Returns whether or not the tooltip is currently being shown\r\n     */\r\n    get isOpen(): boolean;\r\n    set isOpen(value: boolean);\r\n    /**\r\n     * Allows to disable tooltip\r\n     */\r\n    isDisabled: boolean;\r\n    /**\r\n     * Delay before showing the tooltip\r\n     */\r\n    delay: number;\r\n    /**\r\n     * Emits an event when the tooltip is shown\r\n     */\r\n    onShown: EventEmitter<any>;\r\n    /**\r\n     * Emits an event when the tooltip is hidden\r\n     */\r\n    onHidden: EventEmitter<any>;\r\n    /** @deprecated - please use `tooltip` instead */\r\n    set htmlContent(value: string | TemplateRef<any>);\r\n    /** @deprecated - please use `placement` instead */\r\n    set _placement(value: string);\r\n    /** @deprecated - please use `isOpen` instead */\r\n    set _isOpen(value: boolean);\r\n    get _isOpen(): boolean;\r\n    /** @deprecated - please use `isDisabled` instead */\r\n    set _enable(value: boolean);\r\n    get _enable(): boolean;\r\n    /** @deprecated - please use `container=\"body\"` instead */\r\n    set _appendToBody(value: boolean);\r\n    get _appendToBody(): boolean;\r\n    /** @deprecated - removed, will be added to configuration */\r\n    tooltipAnimation: boolean;\r\n    /** @deprecated - will replaced with customClass */\r\n    set _popupClass(value: string);\r\n    /** @deprecated - removed */\r\n    set _tooltipContext(value: any);\r\n    /** @deprecated */\r\n    set _tooltipPopupDelay(value: number);\r\n    /** @deprecated */\r\n    tooltipFadeDuration: number;\r\n    /** @deprecated -  please use `triggers` instead */\r\n    get _tooltipTrigger(): string | string[];\r\n    set _tooltipTrigger(value: string | string[]);\r\n    /** @deprecated */\r\n    tooltipStateChanged: EventEmitter<boolean>;\r\n    protected _delayTimeoutId: number | any;\r\n    protected _tooltipCancelShowFn: Function;\r\n    private _tooltip;\r\n    private _delaySubscription;\r\n    private _ariaDescribedby;\r\n    constructor(_viewContainerRef: ViewContainerRef, cis: ComponentLoaderFactory, config: TooltipConfig, _elementRef: ElementRef, _renderer: Renderer2, _positionService: PositioningService);\r\n    ngOnInit(): void;\r\n    setAriaDescribedBy(): void;\r\n    /**\r\n     * Toggles an element’s tooltip. This is considered a “manual” triggering of\r\n     * the tooltip.\r\n     */\r\n    toggle(): void;\r\n    /**\r\n     * Opens an element’s tooltip. This is considered a “manual” triggering of\r\n     * the tooltip.\r\n     */\r\n    show(): void;\r\n    /**\r\n     * Closes an element’s tooltip. This is considered a “manual” triggering of\r\n     * the tooltip.\r\n     */\r\n    hide(): void;\r\n    ngOnDestroy(): void;\r\n}\r\n"]}