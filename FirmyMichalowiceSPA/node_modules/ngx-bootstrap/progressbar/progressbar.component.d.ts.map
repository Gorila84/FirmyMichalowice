{"version":3,"file":"progressbar.component.d.ts","sources":["progressbar.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ProgressbarConfig } from './progressbar.config';\r\nimport { ProgressbarType } from './progressbar-type.interface';\r\nimport { BarComponent } from './bar.component';\r\nexport declare class ProgressbarComponent {\r\n    /** if `true` changing value of progress bar will be animated */\r\n    set animate(value: boolean);\r\n    /** If `true`, striped classes are applied */\r\n    set striped(value: boolean);\r\n    /** provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger` */\r\n    type: ProgressbarType;\r\n    /** current value of progress bar. Could be a number or array of objects\r\n     * like {\"value\":15,\"type\":\"info\",\"label\":\"15 %\"}\r\n     */\r\n    set value(value: number | any[]);\r\n    isStacked: boolean;\r\n    _striped: boolean;\r\n    _animate: boolean;\r\n    _max: number;\r\n    _value: number | any[];\r\n    get isBs3(): boolean;\r\n    /** maximum total value of progress element */\r\n    get max(): number;\r\n    set max(v: number);\r\n    addClass: boolean;\r\n    bars: BarComponent[];\r\n    constructor(config: ProgressbarConfig);\r\n    addBar(bar: BarComponent): void;\r\n    removeBar(bar: BarComponent): void;\r\n}\r\n"]}